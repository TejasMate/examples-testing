name: MetaCall Examples CI

on:
  workflow_dispatch:
  pull_request:
  push:
    tags:
      - 'v*.*.*'
    branches:
      - main

jobs:
  LinuxUbuntuRun:
    name: Linux - Ubuntu Run
    runs-on: ubuntu-latest  # Use a runner compatible with the architecture
    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Checkout the repository code

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Install MetaCall
        run: |
          sudo apt update
          curl -sL https://raw.githubusercontent.com/metacall/install/master/install.sh | sh

      - name: Run Tests Suits
        run: |
          pip install PyYAML
          find test-suits -type f -name "*.yaml" -exec python ./metacall-test.py -f {} -V \;

  WindowsRun:
    name: Windows Run
    runs-on: windows-latest  # Use a runner compatible with the architecture
    steps:
      - uses: actions/checkout@v4  # Checkout the repository code
      
      - name: Get Latest Release Download
        shell: pwsh
        run: |
          powershell -NoProfile -ExecutionPolicy unrestricted -Command "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; &([scriptblock]::Create((Invoke-WebRequest -UseBasicParsing 'https://raw.githubusercontent.com/metacall/install/master/install.ps1')))"
          
      - name: Running Tests
        shell: pwsh
        run: |
          # git clone https://github.com/metacall/examples.git
          # git clone https://github.com/metacall/examples-testing.git
          Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser
          Invoke-RestMethod -Uri https://get.scoop.sh | Invoke-Expression
          scoop install https://raw.githubusercontent.com/hymkor/expect/master/expect-lua.json
          pip install pyyaml
          expect test-scripts/string-manipulation/test-case1.lua > log.txt
          echo ""
          cat log.txt
          echo ""

          # python windows-tests.py

  MacOSRun:
    name: MacOS Run
    runs-on: macos-latest  # Use a runner compatible with the architecture
    steps:
      - uses: actions/checkout@v4  # Checkout the repository code
      
      - name: Get Latest Release Download
        run: |
          # curl -sL https://raw.githubusercontent.com/metacall/install/master/install.sh | sh

      - name: Running Tests
        run: |
          # git clone https://github.com/metacall/examples.git
          # git clone https://github.com/metacall/examples-testing.git
          # metacall pip3 install requests
          # chmod +x macos-tests.sh
          # ./macos-tests.sh

